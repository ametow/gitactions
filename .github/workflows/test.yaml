name: Complex test

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs: 
      python_version: ${{ steps.version.outputs.python_version }}
    steps:
      - name: "python version"
        id: version
        run: echo "python_version=$(python --version)" >> $GITHUB_OUTPUT

  lint_test:
    needs: setup
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: [3.8, 3.10]

    steps:
      - name: Setup python version ${{matrix.python}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/checkout@v4
        name: checkout
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: "Linting"
        run: flake8
      - name: "unit tests"
        run: pytest

  build:
    runs-on: ubuntu-latest
    needs: lint_test
    steps:
      - uses: actions/checkout@v4

      - name: "build package"
        run: python setup.py sdist

      - name: upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist/
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    env:
      SECRET: ${{ secrets.PROD_TOKEN }}
    steps:
      - name: download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: dist/

      - name: "deploy"
        run: echo "deploying package..."